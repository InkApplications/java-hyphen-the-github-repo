import groovyx.net.http.ContentType
import org._10ne.gradle.rest.RestTask

apply from: 'gradle/credentials.gradle'
apply from: 'gradle/compile.gradle'
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/artifactory.gradle'
apply from: 'gradle/check.gradle'
apply from: 'gradle/license.gradle'

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1'
    classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    classpath "org._10ne.gradle:rest-gradle-plugin:0.3.1"
  }
}

version = "$version${project.hasProperty('release') ? '' : '-SNAPSHOT'}"

repositories {
  jcenter()
}

configurations {
  markdownDoclet
}

dependencies {
  markdownDoclet 'ch.raffael.pegdown-doclet:pegdown-doclet:1.1.1'
}

javadoc.options {
  docletpath = configurations.markdownDoclet.files.asType(List)
  doclet = "ch.raffael.doclets.pegdown.PegdownDoclet"
  addStringOption("parse-timeout", "10")
}

apply plugin: "org.10ne.rest"

task bintraySign(type: RestTask) {
  description = 'Sign the release build on bintray'
  httpMethod = 'post'
  uri = "https://api.bintray.com/gpg/$project_vendor/$project_bintray_repo/${rootProject.name}/versions/$version"
  username = bintrayUsername
  password = bintrayKey
  requestBody = [passphrase: signingPassword]
  contentType = ContentType.JSON
}

task publishToMavenCentral(type: RestTask) {
  description = 'Publish from bintray to maven central'
  httpMethod = 'post'
  uri = "https://api.bintray.com/maven_central_sync/$project_vendor/$project_bintray_repo/${rootProject.name}/versions/$version"
  username = bintrayUsername
  password = bintrayKey
  requestBody = [username: sonatypeUserName, password: sonatypePassword, close: 1]
  contentType = ContentType.JSON
}

task release {
  description = "Releases a version of the library on Artifactory and Bintray"
  dependsOn artifactoryPublish, bintrayUpload, bintraySign
}
